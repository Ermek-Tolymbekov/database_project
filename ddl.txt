create table customer(
    id int primary key,
    f_name varchar(15) not null ,
    l_name varchar(25) not null ,
    phone_number varchar(20),
    contract_status bool not null
);
create table online_customer(
    id int,
    country varchar(40) not null ,
    city varchar(40) not null ,
    street varchar(50) not null ,
    email varchar(100) not null,
    credit_card_number varchar(19),
    exp_date date,
    cvv int,
    zip_code int not null ,
    primary key (id),
    foreign key (id) references customer(id)
);

create table store(
    id int primary key ,
    country varchar(40) not null ,
    city varchar(40) not null ,
    street varchar(50) not null ,
    phone_number varchar(20) not null
);
create table product(
    id int primary key,
    name varchar(100) not null ,
    type varchar(30) not null,
    manufacturer int not null,
    price double precision not null,
    foreign key (manufacturer) references manufacturer(id)
);

create table inventory(
    store_id int,
    product_id int,
    quantity int,
    primary key (store_id, product_id),
    foreign key (store_id) references store(id),
    foreign key (product_id) references product(id)
);
create table manufacturer(
    id int primary key ,
    name varchar(50) not null ,
    email varchar(100) not null
);
create table reorder(
    manufacturer_id int,
    store_id int,
    product_id int,
    reorder_date date,
    quantity int,
    foreign key (manufacturer_id) references manufacturer(id),
    foreign key (store_id) references store(id),
    foreign key (product_id) references product(id)
);

create table shipping_company(
    id int primary key ,
    name varchar(50) not null ,
    contact_number varchar(20) not null ,
    email varchar(100) not null

);
create  table order_info(
    id int primary key ,
    customer_id int,
    product_id int,
    store_id int,
    quantity int not null ,
    total_price double precision not null ,
    order_date date not null ,
    foreign key (customer_id) references customer(id),
    foreign key (product_id) references product(id),
    foreign key (store_id) references store(id)
);
create table shipping_detail(
    tracking_number int primary key ,
    order_id int,
    company_id int,
    zip_code int,
    foreign key (order_id) references order_info(id),
    foreign key (company_id) references shipping_company(id)
);
create table shipping_track(
    customer_id int,
    tracking_number int,
    shipping_date date not null ,
    status varchar(30) not null ,
    foreign key (customer_id) references customer(id),
    foreign key (tracking_number) references shipping_detail(tracking_number)
);

create table sales(
    product_id int,
    sale_date date not null ,
    country varchar(40) not null ,
    city varchar(40) not null ,
    foreign key (product_id) references product(id)
);

create procedure reordering(
    store int,
    prod int
    )
language plpgsql
    as $$
    declare
        quan int := 10 - (select quantity from inventory
                where store_id = store and product_id = prod);
        manu int := (select manufacturer from product
            where product.id = prod);

    begin
        if quan < 10 then
        update inventory set quantity = 10
            where store_id = store and product_id = prod;
        insert into reorder values (manu, store, prod, current_date, quan);
        end if;
    end;
    $$;

create function customer_exists()
    returns trigger as
    $$
    begin
        if exists(select id from customer where id = new.id)
            then return new;
        else return null;
        end if;
    end;
    $$
language plpgsql;

create trigger online before insert on online_customer
    for each row execute function customer_exists();

create procedure ordering(
    ord int,
    stor int,
    cust int,
    prod int,
    amount int
)
language plpgsql
    as $$
    declare
        price double precision := amount * (select price from product where id = prod);

    begin
        if exists(select product_id from inventory where store_id = stor)
        then
        insert into order_info values (ord, cust, prod, stor, amount, price,current_date);
        else insert into order_info values (ord, cust, prod, 1, amount, price,current_date);
        end if;
    end;
    $$;
create procedure shipping(
    track int,
    ord int,
    ship int
)
language plpgsql
as $$
    declare zip int := (select zip_code from online_customer inner join order_info oi
        on online_customer.id = oi.customer_id
        where oi.id = ord);
    begin
        insert into shipping_detail values(track, ord, ship, zip);
    end;
    $$;
